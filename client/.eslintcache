[{"D:\\hele\\client\\src\\index.js":"1","D:\\hele\\client\\src\\App.js":"2","D:\\hele\\client\\src\\pages\\Home.js":"3","D:\\hele\\client\\src\\pages\\Signup.js":"4","D:\\hele\\client\\src\\pages\\Login.js":"5","D:\\hele\\client\\src\\components\\header\\Header.js":"6","D:\\hele\\client\\src\\components\\BottleSingle\\BottleSingle.js":"7","D:\\hele\\client\\src\\utils\\auth.js":"8","D:\\hele\\client\\src\\utils\\mutations.js":"9","D:\\hele\\client\\src\\pages\\BottleHandle\\BottleHandle.js":"10","D:\\hele\\client\\src\\utils\\query.js":"11","D:\\hele\\client\\src\\components\\Dashboard\\Dashboard.js":"12","D:\\hele\\client\\src\\components\\BottleList\\BottleList.js":"13","D:\\hele\\client\\src\\components\\BottleCard\\BottleCard.js":"14","D:\\hele\\client\\src\\components\\BottleForm\\BottleForm.js":"15"},{"size":276,"mtime":1646856509219,"results":"16","hashOfConfig":"17"},{"size":1919,"mtime":1647135418367,"results":"18","hashOfConfig":"17"},{"size":427,"mtime":1647067843719,"results":"19","hashOfConfig":"17"},{"size":4461,"mtime":1647065390274,"results":"20","hashOfConfig":"17"},{"size":3623,"mtime":1647065379003,"results":"21","hashOfConfig":"17"},{"size":848,"mtime":1647065344229,"results":"22","hashOfConfig":"17"},{"size":198,"mtime":1647135418371,"results":"23","hashOfConfig":"17"},{"size":1070,"mtime":1646856509242,"results":"24","hashOfConfig":"17"},{"size":1243,"mtime":1646856509243,"results":"25","hashOfConfig":"17"},{"size":1037,"mtime":1647135666773,"results":"26","hashOfConfig":"17"},{"size":434,"mtime":1647155845167,"results":"27","hashOfConfig":"17"},{"size":670,"mtime":1647161179805,"results":"28","hashOfConfig":"17"},{"size":737,"mtime":1647065318758,"results":"29","hashOfConfig":"17"},{"size":3993,"mtime":1647135643086,"results":"30","hashOfConfig":"17"},{"size":2139,"mtime":1647156889395,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ciokud",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\hele\\client\\src\\index.js",[],["65","66"],"D:\\hele\\client\\src\\App.js",["67"],"import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n// import { BottleProvider } from './utils/BottleContext';\r\nimport Signup from './pages/Signup';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport Header from './components/header/Header';\r\nimport BottleSingle from './components/BottleSingle/BottleSingle'\r\n//hello\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ApolloProvider client={client}>\r\n        {/* < BottleProvider> */}\r\n        <Router>\r\n          <Header />\r\n          <Route exact path=\"/\" component={Home}/>\r\n          <Route exact path=\"/signup\" component={Signup}/>\r\n          <Route exact path=\"/login\"/>\r\n          <Route exact path=\"/bottle/:id\" component={BottleSingle}/>\r\n        </Router>\r\n        {/* </BottleProvider> */}\r\n      </ApolloProvider>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\hele\\client\\src\\pages\\Home.js",[],"D:\\hele\\client\\src\\pages\\Signup.js",[],"D:\\hele\\client\\src\\pages\\Login.js",[],"D:\\hele\\client\\src\\components\\header\\Header.js",[],"D:\\hele\\client\\src\\components\\BottleSingle\\BottleSingle.js",[],"D:\\hele\\client\\src\\utils\\auth.js",[],"D:\\hele\\client\\src\\utils\\mutations.js",[],"D:\\hele\\client\\src\\pages\\BottleHandle\\BottleHandle.js",[],"D:\\hele\\client\\src\\utils\\query.js",[],"D:\\hele\\client\\src\\components\\Dashboard\\Dashboard.js",["68","69"],"D:\\hele\\client\\src\\components\\BottleList\\BottleList.js",[],"D:\\hele\\client\\src\\components\\BottleCard\\BottleCard.js",["70","71","72"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REMOVE_BOTTLE, UPDATE_BOTTLE } from '../../utils/mutations';\r\n// import { useUpdateBottleContext } from '../../utils/BottleContext'\r\nimport bottlecute from '../Images/bottlecute.png';\r\nimport './BottleCard.css';\r\nimport { useHistory } from 'react-router-dom';\r\nconst BottleCard = ({ loadBottles, bottleIdx, bottleText, bottleTime }) => {\r\n  const [bottleTextState, setBottleTextState] = useState(bottleText);\r\n  const [bottleTimeState, setBottleTimeState] = useState(bottleTime);\r\n  // const [bottleTextState, setBottleTextState] = useState('');\r\n  // const loadBottles = useUpdateBottleContext();\r\n  const [removeBottle] = useMutation(REMOVE_BOTTLE);\r\n  const [updateBottle] = useMutation(UPDATE_BOTTLE);\r\n  const [onUpdate, setonUpdate] = useState(false);\r\n  const history = useHistory();\r\n  const handleChangeText = (event) => {\r\n    const { value } = event.target;\r\n    // console.log(event.target.value); // Development //\r\n    setBottleTextState(value);\r\n  };\r\n  const handleChangeTime = (event) => {\r\n    const { value } = event.target;\r\n    // console.log(event.target.value); // Development //\r\n    setBottleTimeState(value);\r\n  };\r\n\r\n  const deleteBottleHandle = async (bottleId) => {\r\n    removeBottle({\r\n      variables: {\r\n        bottleId,\r\n      },\r\n    });\r\n    loadBottles();\r\n  };\r\n  const updateBottleHandle = async () => {\r\n    updateBottle({\r\n      variables: {\r\n        _id: bottleIdx,\r\n        bottleText: bottleTextState,\r\n        bottleTime: bottleTimeState,\r\n      },\r\n    });\r\n    loadBottles();\r\n    setonUpdate((prev) => !prev);\r\n  };\r\n\r\n  const ToggleupdateHandler = () => {\r\n    setonUpdate((prev) => !prev);\r\n    setBottleTextState(bottleText);\r\n    setBottleTimeState(bottleTime);\r\n  };\r\n\r\n  const linktobottle = () => {\r\n    history.push(`/bottle/${bottleIdx}`);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        backgroundColor: '#ffa238',\r\n        height: '100px',\r\n        width: '300px',\r\n        marginBottom: '10px',\r\n        borderRadius: '20px',\r\n      }}\r\n      onClick={() => linktobottle()}\r\n    >\r\n      <div className=\"card-mini\">\r\n        <div\r\n          className=\"pls \"\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'space-between',\r\n            justifyContent: 'space-evenly',\r\n          }}\r\n        >\r\n          <div>\r\n            <img src={bottlecute} className=\"img-cute\" alt=\"bottle-cute\" />\r\n          </div>\r\n          <div>\r\n            <div className=\"card-text\">{bottleTimeState} AM</div>\r\n            <div className=\"card-text\">{bottleTextState} oz</div>\r\n          </div>\r\n        </div>\r\n        {!onUpdate ? (\r\n          <></>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"input\"\r\n              type=\"time\"\r\n              placeholder={bottleTimeState}\r\n              onChange={handleChangeTime}\r\n              defaultValue={bottleTimeState}\r\n            ></input>\r\n            <input\r\n              className=\"input\"\r\n              onChange={handleChangeText}\r\n              defaultValue={bottleTextState}\r\n            ></input>{' '}\r\n          </>\r\n        )}\r\n      </div>\r\n      {/* <div className=\"btn-container\">\r\n        {!onUpdate ? (\r\n          <button\r\n            className=\"btn btn-dng\"\r\n            style={{ backgroundColor: '#ee3232', color: 'white' }}\r\n            onClick={() => deleteBottleHandle(bottleIdx)}\r\n          >\r\n            Delete\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn\" onClick={updateBottleHandle}>\r\n            Update\r\n          </button>\r\n        )}\r\n        <button className=\"btn\" onClick={ToggleupdateHandler}>\r\n          Edit\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BottleCard;\r\n","D:\\hele\\client\\src\\components\\BottleForm\\BottleForm.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":12,"column":3,"nodeType":"79","endLine":12,"endColumn":12,"suggestions":"83"},{"ruleId":"84","severity":2,"message":"85","line":15,"column":13,"nodeType":"79","messageId":"86","endLine":15,"endColumn":19},{"ruleId":"77","severity":1,"message":"87","line":28,"column":9,"nodeType":"79","messageId":"80","endLine":28,"endColumn":27},{"ruleId":"77","severity":1,"message":"88","line":36,"column":9,"nodeType":"79","messageId":"80","endLine":36,"endColumn":27},{"ruleId":"77","severity":1,"message":"89","line":48,"column":9,"nodeType":"79","messageId":"80","endLine":48,"endColumn":28},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setcurrentDate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [result] as a second argument to the useEffect Hook.",["92"],"no-undef","'moment' is not defined.","undef","'deleteBottleHandle' is assigned a value but never used.","'updateBottleHandle' is assigned a value but never used.","'ToggleupdateHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Add dependencies array: [result]",{"range":"95","text":"96"},[520,520],", [result]"]