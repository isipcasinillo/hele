[{"/Users/cisip/Desktop/hele/client/src/index.js":"1","/Users/cisip/Desktop/hele/client/src/App.js":"2","/Users/cisip/Desktop/hele/client/src/pages/Login.js":"3","/Users/cisip/Desktop/hele/client/src/pages/Home.js":"4","/Users/cisip/Desktop/hele/client/src/pages/Signup.js":"5","/Users/cisip/Desktop/hele/client/src/components/header/Header.js":"6","/Users/cisip/Desktop/hele/client/src/utils/mutations.js":"7","/Users/cisip/Desktop/hele/client/src/utils/auth.js":"8","/Users/cisip/Desktop/hele/client/src/pages/BottleHandle/BottleHandle.js":"9","/Users/cisip/Desktop/hele/client/src/utils/query.js":"10","/Users/cisip/Desktop/hele/client/src/components/Dashboard/Dashboard.js":"11","/Users/cisip/Desktop/hele/client/src/components/BottleList/BottleList.js":"12","/Users/cisip/Desktop/hele/client/src/components/BottleForm/BottleForm.js":"13","/Users/cisip/Desktop/hele/client/src/components/BottleCard/BottleCard.js":"14","/Users/cisip/Desktop/hele/client/src/components/BottleSingle/BottleSingle.js":"15"},{"size":265,"mtime":1646813341075,"results":"16","hashOfConfig":"17"},{"size":1857,"mtime":1647078165634,"results":"18","hashOfConfig":"17"},{"size":3501,"mtime":1647068848053,"results":"19","hashOfConfig":"17"},{"size":405,"mtime":1647068848053,"results":"20","hashOfConfig":"17"},{"size":4305,"mtime":1647068848053,"results":"21","hashOfConfig":"17"},{"size":814,"mtime":1647068848052,"results":"22","hashOfConfig":"17"},{"size":1186,"mtime":1646813341078,"results":"23","hashOfConfig":"17"},{"size":1035,"mtime":1646813341078,"results":"24","hashOfConfig":"17"},{"size":1441,"mtime":1647406383915,"results":"25","hashOfConfig":"17"},{"size":409,"mtime":1647242867198,"results":"26","hashOfConfig":"17"},{"size":759,"mtime":1647404588084,"results":"27","hashOfConfig":"17"},{"size":711,"mtime":1647296686087,"results":"28","hashOfConfig":"17"},{"size":2125,"mtime":1647405848790,"results":"29","hashOfConfig":"17"},{"size":3968,"mtime":1647297387575,"results":"30","hashOfConfig":"17"},{"size":188,"mtime":1647078114236,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"elnilz",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/cisip/Desktop/hele/client/src/index.js",[],["68","69"],"/Users/cisip/Desktop/hele/client/src/App.js",["70"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import { BottleProvider } from './utils/BottleContext';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Header from './components/header/Header';\nimport BottleSingle from './components/BottleSingle/BottleSingle'\n//hello\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <>\n      <ApolloProvider client={client}>\n        {/* < BottleProvider> */}\n        <Router>\n          <Header />\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/signup\" component={Signup}/>\n          <Route exact path=\"/login\"/>\n          <Route exact path=\"/bottle/:id\" component={BottleSingle}/>\n        </Router>\n        {/* </BottleProvider> */}\n      </ApolloProvider>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default App;\n","/Users/cisip/Desktop/hele/client/src/pages/Login.js",[],"/Users/cisip/Desktop/hele/client/src/pages/Home.js",[],"/Users/cisip/Desktop/hele/client/src/pages/Signup.js",[],"/Users/cisip/Desktop/hele/client/src/components/header/Header.js",[],"/Users/cisip/Desktop/hele/client/src/utils/mutations.js",[],"/Users/cisip/Desktop/hele/client/src/utils/auth.js",[],"/Users/cisip/Desktop/hele/client/src/pages/BottleHandle/BottleHandle.js",["71"],"import React, { useEffect } from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport BottleList from '../../components/BottleList/BottleList';\nimport BottleForm from '../../components/BottleForm/BottleForm';\nimport Dashboard from '../../components/Dashboard/Dashboard';\nimport Auth from '../../utils/auth';\nimport { QUERY_BOTTLES, QUERY_SINGLE_BOTTLE } from '../../utils/query';\nconst BottleHandle = () => {\n  const [loadBottles, { data: databottles }] = useLazyQuery(QUERY_BOTTLES, {\n    variables: { BottleAuthor: Auth.getProfile().data.username },\n  });\n  const bote = databottles?.getBottles;\n\n  const  [loadSingleBottle, { data: dataSinglebottle }] = useLazyQuery(QUERY_SINGLE_BOTTLE, {\n    variables: { BottleAuthor: Auth.getProfile().data.username },\n  });\n  const singleBottleResult = dataSinglebottle?.getSingleBottle.bottleTime;\n \n \n  useEffect(() => {\n    loadBottles();\n    loadSingleBottle()\n  }, [loadBottles, loadSingleBottle]);\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n    >\n      <div>\n        <Dashboard  dataSingleBottle={singleBottleResult}/>\n        <BottleForm loadBottles={loadBottles} reloadDash={loadSingleBottle} />\n      </div>\n      <div style={{ marginTop: '10px' }}>\n        <BottleList bottleData={bote} loadBottles={loadBottles} />\n      </div>\n    </div>\n  );\n};\n\nexport default BottleHandle;\n","/Users/cisip/Desktop/hele/client/src/utils/query.js",[],"/Users/cisip/Desktop/hele/client/src/components/Dashboard/Dashboard.js",["72","73","74","75","76","77"],"import React, { useEffect, useState,  } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_SINGLE_BOTTLE } from '../../utils/query';\nimport Moment from 'react-moment';\nimport moment from 'moment'\nimport Auth from '../../utils/auth';\nexport default function Dashboard({dataSingleBottle}) {\n  // const [usewuery, { data } ]= useLazyQuery(QUERY_SINGLE_BOTTLE, {\n  //   variables: { BottleAuthor: Auth.getProfile().data.username },\n  // });\n\n  // useEffect(()=> {\n  //   usewuery()\n  // }, [])\n  // const singleBottleResult = data?.getSingleBottle.bottleTime\n  // const recentBottleDate = new Date(singleBottleResult)\n  return (\n    <>\n    <div>\n      Last feeding was <Moment fromNow>{dataSingleBottle}</Moment>\n    </div>\n    </>\n  );\n}","/Users/cisip/Desktop/hele/client/src/components/BottleList/BottleList.js",[],"/Users/cisip/Desktop/hele/client/src/components/BottleForm/BottleForm.js",["78"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport { ADD_BOTTLE } from '../../utils/mutations';\n// import { useBottleContext } from '../../utils/BottleContext';\n// import { useUpdateBottleContext } from '../../utils/BottleContext';\nimport { QUERY_BOTTLES, QUERY_SINGLE_BOTTLE } from '../../utils/query';\nimport './BottleForm.css';\nconst BottleForm = ({ loadBottles, reloadDash }) => {\n  const [bottleText, setBottleText] = useState('');\n  const [bottleTime, setBottleTime] = useState('');\n  // const loadBottles = useUpdateBottleContext();\n  const [addBottle] = useMutation(ADD_BOTTLE);\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n    // console.log(event.target.value); // Development //\n    setBottleText(value);\n  };\n  const handleChangeTime = (event) => {\n    const { value } = event.target;\n    // console.log(event.target.value); // Development //\n    setBottleTime(value);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (bottleText === '') {\n      return;\n    }\n    try {\n      await addBottle({\n        variables: {\n          bottleText,\n          bottleTime,\n          bottleAuthor: Auth.getProfile().data.username,\n        },\n        refetchQueries: [{ query: QUERY_SINGLE_BOTTLE}],\n      });\n      loadBottles();\n      reloadDash();\n      setBottleText('');\n      setBottleTime('');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <>\n      <form className=\"bottle-form\" onSubmit={handleFormSubmit}>\n        <input\n          placeholder=\"How much Ounce\"\n          name=\"bottleText\"\n          type=\"text\"\n          value={bottleText}\n          onChange={handleChange}\n        />\n        <input\n          style={{ margin: '20px 0px 20px 0px' }}\n          type=\"datetime-local\"\n          name=\"bottleTime\"\n          value={bottleTime}\n          onChange={handleChangeTime}\n        />\n\n        <button className=\"btn-add\" type=\"submit\" onClick={() => {}}>\n          Add Bottle\n        </button>\n      </form>\n    </>\n  );\n};\nexport default BottleForm;\n","/Users/cisip/Desktop/hele/client/src/components/BottleCard/BottleCard.js",["79","80","81"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { REMOVE_BOTTLE, UPDATE_BOTTLE } from '../../utils/mutations';\n// import { useUpdateBottleContext } from '../../utils/BottleContext'\nimport bottlecute from '../Images/bottlecute.png';\nimport './BottleCard.css';\nimport { useHistory } from 'react-router-dom';\nconst BottleCard = ({ loadBottles, bottleIdx, bottleText, bottleTime }) => {\n  const [bottleTextState, setBottleTextState] = useState(bottleText);\n  const [bottleTimeState, setBottleTimeState] = useState(bottleTime);\n  // const [bottleTextState, setBottleTextState] = useState('');\n  // const loadBottles = useUpdateBottleContext();\n  const [removeBottle] = useMutation(REMOVE_BOTTLE);\n  const [updateBottle] = useMutation(UPDATE_BOTTLE);\n  const [onUpdate, setonUpdate] = useState(false);\n  const history = useHistory();\n  const handleChangeText = (event) => {\n    const { value } = event.target;\n   \n    // console.log(event.target.value); // Development //\n    setBottleTextState(value);\n  };\n  const handleChangeTime = (event) => {\n    const { value } = event.target;\n    // console.log(event.target.value); // Development //\n    setBottleTimeState(value);\n  };\n  \n  const deleteBottleHandle = async (bottleId) => {\n    removeBottle({\n      variables: {\n        bottleId,\n      },\n    });\n    loadBottles();\n  };\n  const updateBottleHandle = async () => {\n    updateBottle({\n      variables: {\n        _id: bottleIdx,\n        bottleText: bottleTextState,\n        bottleTime: bottleTimeState,\n      },\n    });\n    loadBottles();\n    setonUpdate((prev) => !prev);\n  };\n\n  const ToggleupdateHandler = () => {\n    setonUpdate((prev) => !prev);\n    setBottleTextState(bottleText);\n    setBottleTimeState(bottleTime);\n  };\n\n  const linktobottle = () => {\n    history.push(`/bottle/${bottleIdx}`);\n  };\n\n  return (\n    <div\n      className=\"card\"\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n        backgroundColor: '#ffa238',\n        height: '100px',\n        width: '300px',\n        marginBottom: '10px',\n        borderRadius: '20px',\n      }}\n      onClick={() => linktobottle()}\n    >\n      <div className=\"card-mini\">\n        <div\n          className=\"pls \"\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'space-between',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          <div>\n            <img src={bottlecute} className=\"img-cute\" alt=\"bottle-cute\" />\n          </div>\n          <div>\n            <div className=\"card-text\">{new Date(bottleTimeState).toLocaleString('en-US', { hour: 'numeric', hour12: true, minute: '2-digit' })}  </div>\n            \n            <div className=\"card-text\">{bottleTextState} oz</div>\n          </div>\n        </div>\n        {!onUpdate ? (\n          <></>\n        ) : (\n          <>\n            <input\n              className=\"input\"\n              type=\"time\"\n              placeholder={bottleTimeState}\n              onChange={handleChangeTime}\n              defaultValue={bottleTimeState}\n            ></input>\n            <input\n              className=\"input\"\n              onChange={handleChangeText}\n              defaultValue={bottleTextState}\n            ></input>{' '}\n          </>\n        )}\n      </div>\n      {/* <div className=\"btn-container\">\n        {!onUpdate ? (\n          <button\n            className=\"btn btn-dng\"\n            style={{ backgroundColor: '#ee3232', color: 'white' }}\n            onClick={() => deleteBottleHandle(bottleIdx)}\n          >\n            Delete\n          </button>\n        ) : (\n          <button className=\"btn\" onClick={updateBottleHandle}>\n            Update\n          </button>\n        )}\n        <button className=\"btn\" onClick={ToggleupdateHandler}>\n          Edit\n        </button>\n      </div> */}\n    </div>\n  );\n};\n\nexport default BottleCard;\n","/Users/cisip/Desktop/hele/client/src/components/BottleSingle/BottleSingle.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":12,"column":8,"nodeType":"88","messageId":"89","endLine":12,"endColumn":13},{"ruleId":"86","severity":1,"message":"90","line":2,"column":24,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"91","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"92","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"93","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":22},{"ruleId":"86","severity":1,"message":"94","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":29},{"ruleId":"86","severity":1,"message":"95","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"96","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":12},{"ruleId":"86","severity":1,"message":"97","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":23},{"ruleId":"86","severity":1,"message":"98","line":29,"column":9,"nodeType":"88","messageId":"89","endLine":29,"endColumn":27},{"ruleId":"86","severity":1,"message":"99","line":37,"column":9,"nodeType":"88","messageId":"89","endLine":37,"endColumn":27},{"ruleId":"86","severity":1,"message":"100","line":49,"column":9,"nodeType":"88","messageId":"89","endLine":49,"endColumn":28},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useLazyQuery' is defined but never used.","'QUERY_SINGLE_BOTTLE' is defined but never used.","'moment' is defined but never used.","'Auth' is defined but never used.","'QUERY_BOTTLES' is defined but never used.","'deleteBottleHandle' is assigned a value but never used.","'updateBottleHandle' is assigned a value but never used.","'ToggleupdateHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]